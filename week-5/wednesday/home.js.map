{"version":3,"file":"home.js","sources":["src/components/faves.js","src/components/dom.js","src/home.js"],"sourcesContent":["let favesID = 'places_faves';\n\n/**\n * Add a place to the faves\n * @param {String} id The place ID\n */\nfunction addFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Add place to it\n  faves[id] = true;\n\n  // Save back to localStorage\n  localStorage.setItem(favesID, JSON.stringify(faves));\n}\n\n/**\n * Remove a place from faves\n * @param {String} id The place ID\n */\nfunction removeFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Remove place from it\n  delete faves[id];\n\n  // Save back to localStorage\n  localStorage.setItem(favesID, JSON.stringify(faves));\n}\n\n/**\n * Check if a place is a favorite\n * @param {String}  id The place ID\n * @param {Boolean}    If true, the place is a favorite\n */\nfunction isFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Check if fave exists\n  return faves[id];\n}\n\nexport { addFave, removeFave, isFave };\n","import { isFave } from './faves.js';\n\n/**\n * Load buttons into the UI\n * @return {[type]} [description]\n */\nfunction loadButtons() {\n  // Check for controls\n  let controls = document.querySelector('[data-controls]');\n  if (!controls) return;\n\n  // Get the content ID\n  let id = controls.getAttribute('data-controls');\n\n  // Inject buttons\n  controls.innerHTML = `\n\t\t\t<button\n        type=\"button\"\n        data-fave=\"${id}\" \n        aria-pressed=\"${isFave(id) ? 'true' : 'false'}\"\n      >\n          <span aria-hidden=\"true\">♥</span> Favorite\n\t\t\t</button>\n\t\t`;\n}\n\n/**\n * Load icons onto the homepage for favorited places\n */\nfunction loadIcons() {\n  // Get places\n  let places = document.querySelectorAll('[data-place]');\n\n  // Create an icon\n  let icon = document.createElement('span');\n  icon.setAttribute('aria-label', '(Favorite)');\n  icon.textContent = ' ♥';\n\n  // Loop through each place and add an icon if it's a favorite\n  for (let place of places) {\n    // Get the place ID\n    let id = place.getAttribute('data-place');\n\n    // If place is not a fave, carry on\n    if (!isFave(id)) continue;\n\n    // Otherwise, add an icon\n    let title = place.querySelector('.place-title');\n    if (!title) continue;\n    title.append(icon.cloneNode(true));\n  }\n}\n\nexport { loadButtons, loadIcons };\n","import { loadIcons } from './components/dom';\n\nloadIcons();\n"],"names":["isFave","id","JSON","parse","localStorage","getItem","places","document","querySelectorAll","icon","createElement","setAttribute","textContent","place","getAttribute","title","querySelector","append","cloneNode","loadIcons"],"mappings":";yBAqCA,SAASA,EAAOC,GAKd,OAHYC,KAAKC,MAAMC,aAAaC,QAvCxB,kBAuC6C,IAG5CJ,ICbf,WAEE,IAAIK,EAASC,SAASC,iBAAiB,gBAGnCC,EAAOF,SAASG,cAAc,QAClCD,EAAKE,aAAa,aAAc,cAChCF,EAAKG,YAAc,KAGnB,IAAK,IAAIC,KAASP,EAAQ,CAKxB,IAAKN,EAHIa,EAAMC,aAAa,eAGX,SAGjB,IAAIC,EAAQF,EAAMG,cAAc,gBAC3BD,GACLA,EAAME,OAAOR,EAAKS,WAAU,KC/ChCC"}