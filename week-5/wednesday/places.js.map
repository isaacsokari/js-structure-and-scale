{"version":3,"file":"places.js","sources":["src/components/faves.js","src/components/events.js","src/components/dom.js","src/places.js"],"sourcesContent":["let favesID = 'places_faves';\n\n/**\n * Add a place to the faves\n * @param {String} id The place ID\n */\nfunction addFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Add place to it\n  faves[id] = true;\n\n  // Save back to localStorage\n  localStorage.setItem(favesID, JSON.stringify(faves));\n}\n\n/**\n * Remove a place from faves\n * @param {String} id The place ID\n */\nfunction removeFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Remove place from it\n  delete faves[id];\n\n  // Save back to localStorage\n  localStorage.setItem(favesID, JSON.stringify(faves));\n}\n\n/**\n * Check if a place is a favorite\n * @param {String}  id The place ID\n * @param {Boolean}    If true, the place is a favorite\n */\nfunction isFave(id) {\n  // Get saved items\n  let faves = JSON.parse(localStorage.getItem(favesID)) || {};\n\n  // Check if fave exists\n  return faves[id];\n}\n\nexport { addFave, removeFave, isFave };\n","import { removeFave, addFave } from './faves.js';\n\n/**\n * Handle click events\n * @param  {Event} event The event object\n */\nfunction clickHandler(event) {\n  // Make sure a [data-fave] button was clicked\n  let btn = event.target.closest('[data-fave]');\n  if (!btn) return;\n\n  // Get place ID\n  let id = btn.getAttribute('data-fave');\n  let state = btn.getAttribute('aria-pressed');\n\n  // Update button UI and save\n  if (state === 'true') {\n    btn.setAttribute('aria-pressed', 'false');\n    removeFave(id);\n  } else {\n    btn.setAttribute('aria-pressed', 'true');\n    addFave(id);\n  }\n}\n\n// Listen for clicks on fave and visited buttons\ndocument.addEventListener('click', clickHandler);\n","import { isFave } from './faves.js';\n\n/**\n * Load buttons into the UI\n * @return {[type]} [description]\n */\nfunction loadButtons() {\n  // Check for controls\n  let controls = document.querySelector('[data-controls]');\n  if (!controls) return;\n\n  // Get the content ID\n  let id = controls.getAttribute('data-controls');\n\n  // Inject buttons\n  controls.innerHTML = `\n\t\t\t<button\n        type=\"button\"\n        data-fave=\"${id}\" \n        aria-pressed=\"${isFave(id) ? 'true' : 'false'}\"\n      >\n          <span aria-hidden=\"true\">♥</span> Favorite\n\t\t\t</button>\n\t\t`;\n}\n\n/**\n * Load icons onto the homepage for favorited places\n */\nfunction loadIcons() {\n  // Get places\n  let places = document.querySelectorAll('[data-place]');\n\n  // Create an icon\n  let icon = document.createElement('span');\n  icon.setAttribute('aria-label', '(Favorite)');\n  icon.textContent = ' ♥';\n\n  // Loop through each place and add an icon if it's a favorite\n  for (let place of places) {\n    // Get the place ID\n    let id = place.getAttribute('data-place');\n\n    // If place is not a fave, carry on\n    if (!isFave(id)) continue;\n\n    // Otherwise, add an icon\n    let title = place.querySelector('.place-title');\n    if (!title) continue;\n    title.append(icon.cloneNode(true));\n  }\n}\n\nexport { loadButtons, loadIcons };\n","import { loadButtons } from './components/dom.js';\nimport './components/events.js';\n\n// Load buttons into the UI\nloadButtons();\n"],"names":["favesID","document","addEventListener","event","btn","target","closest","id","getAttribute","setAttribute","faves","JSON","parse","localStorage","getItem","setItem","stringify","removeFave","addFave","controls","querySelector","innerHTML","isFave","loadButtons"],"mappings":";yBAAA,IAAIA,EAAU,eC0BdC,SAASC,iBAAiB,SApB1B,SAAsBC,GAEpB,IAAIC,EAAMD,EAAME,OAAOC,QAAQ,eAC/B,IAAKF,EAAK,OAGV,IAAIG,EAAKH,EAAII,aAAa,aAIZ,SAHFJ,EAAII,aAAa,iBAI3BJ,EAAIK,aAAa,eAAgB,SDIrC,SAAoBF,GAElB,IAAIG,EAAQC,KAAKC,MAAMC,aAAaC,QAAQd,KAAa,UAGlDU,EAAMH,GAGbM,aAAaE,QAAQf,EAASW,KAAKK,UAAUN,ICX3CO,CAAWV,KAEXH,EAAIK,aAAa,eAAgB,QDdrC,SAAiBF,GAEf,IAAIG,EAAQC,KAAKC,MAAMC,aAAaC,QAAQd,KAAa,GAGzDU,EAAMH,IAAM,EAGZM,aAAaE,QAAQf,EAASW,KAAKK,UAAUN,ICO3CQ,CAAQX,OCfZ,WAEE,IAAIY,EAAWlB,SAASmB,cAAc,mBACtC,IAAKD,EAAU,OAGf,IAAIZ,EAAKY,EAASX,aAAa,iBAG/BW,EAASE,UAAY,8DAGFd,8BFmBrB,SAAgBA,GAKd,OAHYI,KAAKC,MAAMC,aAAaC,QAAQd,KAAa,IAG5CO,GEvBSe,CAAOf,GAAM,OAAS,iGCf9CgB"}